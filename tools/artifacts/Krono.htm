<!DOCTYPE html>
<html>
<head>
    <title>Krono Business Model</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>
    <script>mermaid.initialize({startOnLoad:true});</script>
</head>
<body class="bg-gray-50">
    <div class="container mx-auto p-4">
        <h1 class="text-4xl font-bold text-center mb-8">👻 Krono Business Model</h1>

        <div id="artifacts-container" class="mt-8">
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            fetch('Krono.json')
                .then(response => response.json())
                .then(data => renderArtifacts(data))
                .catch(error => console.error('Error loading Krono.json:', error));
        });

        function renderArtifacts(data) {
            const container = document.getElementById('artifacts-container');
            container.innerHTML = ''; // Clear previous artifacts

            container.appendChild(renderBusinessModelCanvas(data.businessModelCanvas));
            container.appendChild(renderLeanCanvas(data.leanCanvas));
            container.appendChild(renderSalesFunnel(data.salesFunnel));
            container.appendChild(renderCustomerJourneyMap(data.customerJourneyMap));
            container.appendChild(renderBuyerPersona(data.buyerPersona));
            container.appendChild(renderEmpathyMap(data.empathyMap));
            container.appendChild(renderValuePropositionCanvas(data.valuePropositionCanvas));
            container.appendChild(renderSwotAnalysis(data.swotAnalysis));
            container.appendChild(renderPestelAnalysis(data.pestelAnalysis));
            container.appendChild(renderPortersFiveForces(data.portersFiveForces));
            container.appendChild(renderAnsoffMatrix(data.ansoffMatrix));
            container.appendChild(renderRaciMatrix(data.raciMatrix));
            container.appendChild(renderUserStories(data.userStories));
            container.appendChild(renderProductRoadmap(data.productRoadmap));
            container.appendChild(renderCompetitiveAnalysis(data.competitiveAnalysis));
            container.appendChild(renderOkrFramework(data.okrFramework));
            container.appendChild(renderGoldenCircle(data.goldenCircle));
            container.appendChild(renderJobsToBeDone(data.jobsToBeDone));
            
            // Re-initialize Mermaid to render the new diagrams
            mermaid.init(undefined, container.querySelectorAll('.mermaid'));
        }

        function createArtifactBox(title) {
            const box = document.createElement('div');
            box.className = 'bg-white p-4 rounded-lg mt-8 shadow-md';
            const titleElement = document.createElement('h2');
            titleElement.className = 'text-2xl font-bold mb-4';
            titleElement.innerHTML = title;
            box.appendChild(titleElement);
            return box;
        }

        function createList(items) {
            const ul = document.createElement('ul');
            ul.className = 'list-disc list-inside mt-2';
            for (const item of items) {
                const li = document.createElement('li');
                li.textContent = item;
                ul.appendChild(li);
            }
            return ul;
        }

        function renderBusinessModelCanvas(data) {
            const box = createArtifactBox('🎨 Business Model Canvas');
            const grid = document.createElement('div');
            grid.className = 'grid grid-cols-5 gap-4 text-sm';

            const keyPartners = document.createElement('div');
            keyPartners.className = 'col-span-1 bg-white p-2 rounded-lg border';
            keyPartners.innerHTML = `<h3 class="font-bold">${data.keyPartners.title}</h3>`;
            keyPartners.appendChild(createList(data.keyPartners.items));

            const keyActivitiesResources = document.createElement('div');
            keyActivitiesResources.className = 'col-span-1 grid grid-rows-2 gap-4';
            const keyActivities = document.createElement('div');
            keyActivities.className = 'bg-white p-2 rounded-lg border';
            keyActivities.innerHTML = `<h3 class="font-bold">${data.keyActivities.title}</h3>`;
            keyActivities.appendChild(createList(data.keyActivities.items));
            const keyResources = document.createElement('div');
            keyResources.className = 'bg-white p-2 rounded-lg border';
            keyResources.innerHTML = `<h3 class="font-bold">${data.keyResources.title}</h3>`;
            keyResources.appendChild(createList(data.keyResources.items));
            keyActivitiesResources.appendChild(keyActivities);
            keyActivitiesResources.appendChild(keyResources);

            const valuePropositions = document.createElement('div');
            valuePropositions.className = 'col-span-1 bg-white p-2 rounded-lg border';
            valuePropositions.innerHTML = `<h3 class="font-bold">${data.valuePropositions.title}</h3>`;
            valuePropositions.appendChild(createList(data.valuePropositions.items));

            const customerRelationshipsChannels = document.createElement('div');
            customerRelationshipsChannels.className = 'col-span-1 grid grid-rows-2 gap-4';
            const customerRelationships = document.createElement('div');
            customerRelationships.className = 'bg-white p-2 rounded-lg border';
            customerRelationships.innerHTML = `<h3 class="font-bold">${data.customerRelationships.title}</h3>`;
            customerRelationships.appendChild(createList(data.customerRelationships.items));
            const channels = document.createElement('div');
            channels.className = 'bg-white p-2 rounded-lg border';
            channels.innerHTML = `<h3 class="font-bold">${data.channels.title}</h3>`;
            channels.appendChild(createList(data.channels.items));
            customerRelationshipsChannels.appendChild(customerRelationships);
            customerRelationshipsChannels.appendChild(channels);

            const customerSegments = document.createElement('div');
            customerSegments.className = 'col-span-1 bg-white p-2 rounded-lg border';
            customerSegments.innerHTML = `<h3 class="font-bold">${data.customerSegments.title}</h3>`;
            customerSegments.appendChild(createList(data.customerSegments.items));

            const bottomGrid = document.createElement('div');
            bottomGrid.className = 'col-span-5 grid grid-cols-2 gap-4 mt-4';
            const costStructure = document.createElement('div');
            costStructure.className = 'col-span-1 bg-white p-2 rounded-lg border';
            costStructure.innerHTML = `<h3 class="font-bold">${data.costStructure.title}</h3>`;
            costStructure.appendChild(createList(data.costStructure.items));
            const revenueStreams = document.createElement('div');
            revenueStreams.className = 'col-span-1 bg-white p-2 rounded-lg border';
            revenueStreams.innerHTML = `<h3 class="font-bold">${data.revenueStreams.title}</h3>`;
            revenueStreams.appendChild(createList(data.revenueStreams.items));
            bottomGrid.appendChild(costStructure);
            bottomGrid.appendChild(revenueStreams);

            grid.appendChild(keyPartners);
            grid.appendChild(keyActivitiesResources);
            grid.appendChild(valuePropositions);
            grid.appendChild(customerRelationshipsChannels);
            grid.appendChild(customerSegments);
            grid.appendChild(bottomGrid);

            box.appendChild(grid);
            return box;
        }

        function renderLeanCanvas(data) {
            const box = createArtifactBox('🚀 Lean Canvas');
            const grid = document.createElement('div');
            grid.className = 'grid grid-cols-5 gap-4 text-sm';

            const problem = document.createElement('div');
            problem.className = 'col-span-1 bg-white p-2 rounded-lg border';
            problem.innerHTML = `<h3 class="font-bold">${data.problem.title}</h3>`;
            problem.appendChild(createList(data.problem.items));

            const solutionMetrics = document.createElement('div');
            solutionMetrics.className = 'col-span-1 grid grid-rows-2 gap-4';
            const solution = document.createElement('div');
            solution.className = 'bg-white p-2 rounded-lg border';
            solution.innerHTML = `<h3 class="font-bold">${data.solution.title}</h3>`;
            solution.appendChild(createList(data.solution.items));
            const keyMetrics = document.createElement('div');
            keyMetrics.className = 'bg-white p-2 rounded-lg border';
            keyMetrics.innerHTML = `<h3 class="font-bold">${data.keyMetrics.title}</h3>`;
            keyMetrics.appendChild(createList(data.keyMetrics.items));
            solutionMetrics.appendChild(solution);
            solutionMetrics.appendChild(keyMetrics);

            const uniqueValueProposition = document.createElement('div');
            uniqueValueProposition.className = 'col-span-1 bg-white p-2 rounded-lg border';
            uniqueValueProposition.innerHTML = `<h3 class="font-bold">${data.uniqueValueProposition.title}</h3>`;
            uniqueValueProposition.appendChild(createList(data.uniqueValueProposition.items));

            const unfairAdvantageChannels = document.createElement('div');
            unfairAdvantageChannels.className = 'col-span-1 grid grid-rows-2 gap-4';
            const unfairAdvantage = document.createElement('div');
            unfairAdvantage.className = 'bg-white p-2 rounded-lg border';
            unfairAdvantage.innerHTML = `<h3 class="font-bold">${data.unfairAdvantage.title}</h3>`;
            unfairAdvantage.appendChild(createList(data.unfairAdvantage.items));
            const channels = document.createElement('div');
            channels.className = 'bg-white p-2 rounded-lg border';
            channels.innerHTML = `<h3 class="font-bold">${data.channels.title}</h3>`;
            channels.appendChild(createList(data.channels.items));
            unfairAdvantageChannels.appendChild(unfairAdvantage);
            unfairAdvantageChannels.appendChild(channels);

            const customerSegments = document.createElement('div');
            customerSegments.className = 'col-span-1 bg-white p-2 rounded-lg border';
            customerSegments.innerHTML = `<h3 class="font-bold">${data.customerSegments.title}</h3>`;
            customerSegments.appendChild(createList(data.customerSegments.items));

            const bottomGrid = document.createElement('div');
            bottomGrid.className = 'col-span-5 grid grid-cols-2 gap-4 mt-4';
            const costStructure = document.createElement('div');
            costStructure.className = 'col-span-1 bg-white p-2 rounded-lg border';
            costStructure.innerHTML = `<h3 class="font-bold">${data.costStructure.title}</h3>`;
            costStructure.appendChild(createList(data.costStructure.items));
            const revenueStreams = document.createElement('div');
            revenueStreams.className = 'col-span-1 bg-white p-2 rounded-lg border';
            revenueStreams.innerHTML = `<h3 class="font-bold">${data.revenueStreams.title}</h3>`;
            revenueStreams.appendChild(createList(data.revenueStreams.items));
            bottomGrid.appendChild(costStructure);
            bottomGrid.appendChild(revenueStreams);

            grid.appendChild(problem);
            grid.appendChild(solutionMetrics);
            grid.appendChild(uniqueValueProposition);
            grid.appendChild(unfairAdvantageChannels);
            grid.appendChild(customerSegments);
            grid.appendChild(bottomGrid);

            box.appendChild(grid);
            return box;
        }

        function renderSalesFunnel(data) {
            const box = createArtifactBox('📈 Sales Funnel');
            const mermaid = document.createElement('div');
            mermaid.className = 'mermaid';
            mermaid.textContent = `
                funnel
                    title ${data.title}
                    "Awareness" : ${data.awareness}
                    "Interest" : ${data.interest}
                    "Consideration" : ${data.consideration}
                    "Conversion" : ${data.conversion}
                    "Retention" : ${data.retention}
            `;
            box.appendChild(mermaid);
            return box;
        }

        function renderCustomerJourneyMap(data) {
            const box = createArtifactBox('🗺️ Customer Journey Map');
            const flex = document.createElement('div');
            flex.className = 'flex space-x-4 overflow-x-auto';

            const colors = ['bg-blue-100', 'bg-green-100', 'bg-yellow-100', 'bg-purple-100', 'bg-red-100'];

            for (let i = 0; i < data.length; i++) {
                const stage = data[i];
                const stageBox = document.createElement('div');
                stageBox.className = `${colors[i % colors.length]} p-4 rounded-lg shadow-md w-72`;
                stageBox.innerHTML = `<h3 class="text-lg font-bold mb-2">${stage.stage}</h3>`;
                stageBox.innerHTML += `<p><strong>Actions:</strong> ${stage.actions}</p>`;
                stageBox.innerHTML += `<p><strong>Touchpoints:</strong> ${stage.touchpoints}</p>`;
                stageBox.innerHTML += `<p><strong>Thoughts & Feelings:</strong> ${stage.thoughtsFeelings}</p>`;
                stageBox.innerHTML += `<p><strong>Pain Points:</strong> ${stage.painPoints}</p>`;
                stageBox.innerHTML += `<p><strong>Opportunities:</strong> ${stage.opportunities}</p>`;
                flex.appendChild(stageBox);
            }

            box.appendChild(flex);
            return box;
        }

        function renderBuyerPersona(data) {
            const box = createArtifactBox('👩‍💼 Buyer Persona');
            box.innerHTML += `<h3 class="text-xl font-bold mb-2">${data.name}</h3>`;
            const grid = document.createElement('div');
            grid.className = 'grid grid-cols-2 gap-4';

            const background = document.createElement('div');
            background.className = 'bg-white p-4 rounded-lg shadow border';
            background.innerHTML = '<h4 class="text-lg font-bold mb-2">Background</h4>';
            const backgroundList = document.createElement('ul');
            backgroundList.className = 'list-disc list-inside';
            for (const key in data.background) {
                const li = document.createElement('li');
                li.innerHTML = `<strong>${key}:</strong> ${data.background[key]}`;
                backgroundList.appendChild(li);
            }
            background.appendChild(backgroundList);

            const demographics = document.createElement('div');
            demographics.className = 'bg-white p-4 rounded-lg shadow border';
            demographics.innerHTML = '<h4 class="text-lg font-bold mb-2">Demographics</h4>';
            const demographicsList = document.createElement('ul');
            demographicsList.className = 'list-disc list-inside';
            for (const key in data.demographics) {
                const li = document.createElement('li');
                li.innerHTML = `<strong>${key}:</strong> ${data.demographics[key]}`;
                demographicsList.appendChild(li);
            }
            demographics.appendChild(demographicsList);

            const goals = document.createElement('div');
            goals.className = 'bg-white p-4 rounded-lg shadow border';
            goals.innerHTML = '<h4 class="text-lg font-bold mb-2">Goals</h4>';
            goals.appendChild(createList(data.goals));

            const challenges = document.createElement('div');
            challenges.className = 'bg-white p-4 rounded-lg shadow border';
            challenges.innerHTML = '<h4 class="text-lg font-bold mb-2">Challenges</h4>';
            challenges.appendChild(createList(data.challenges));

            const howWeHelp = document.createElement('div');
            howWeHelp.className = 'bg-white p-4 rounded-lg shadow col-span-2 border';
            howWeHelp.innerHTML = '<h4 class="text-lg font-bold mb-2">How we help</h4>';
            howWeHelp.appendChild(createList(data.howWeHelp));

            const marketingMessage = document.createElement('div');
            marketingMessage.className = 'bg-white p-4 rounded-lg shadow border';
            marketingMessage.innerHTML = '<h4 class="text-lg font-bold mb-2">Marketing Message</h4>';
            marketingMessage.innerHTML += `<p>${data.marketingMessage}</p>`;

            const wateringHoles = document.createElement('div');
            wateringHoles.className = 'bg-white p-4 rounded-lg shadow border';
            wateringHoles.innerHTML = '<h4 class="text-lg font-bold mb-2">Watering Holes</h4>';
            wateringHoles.appendChild(createList(data.wateringHoles));

            grid.appendChild(background);
            grid.appendChild(demographics);
            grid.appendChild(goals);
            grid.appendChild(challenges);
            grid.appendChild(howWeHelp);
            grid.appendChild(marketingMessage);
            grid.appendChild(wateringHoles);

            box.appendChild(grid);
            return box;
        }

        function renderEmpathyMap(data) {
            const box = createArtifactBox('🤔 Empathy Map');
            const grid = document.createElement('div');
            grid.className = 'grid grid-cols-2 gap-4';

            for (const key in data) {
                const section = data[key];
                const sectionBox = document.createElement('div');
                sectionBox.className = 'bg-white p-4 rounded-lg shadow border';
                sectionBox.innerHTML = `<h3 class="text-lg font-bold mb-2">${section.title}</h3>`;
                sectionBox.appendChild(createList(section.items));
                grid.appendChild(sectionBox);
            }

            box.appendChild(grid);
            return box;
        }

        function renderValuePropositionCanvas(data) {
            const box = createArtifactBox('🎨 Value Proposition Canvas');
            const grid = document.createElement('div');
            grid.className = 'grid grid-cols-2 gap-4';

            const left = document.createElement('div');
            left.className = 'space-y-4';
            const productsServices = document.createElement('div');
            productsServices.className = 'bg-white p-4 rounded-lg shadow-md border';
            productsServices.innerHTML = `<h3 class="text-lg font-bold mb-2">${data.productsServices.title}</h3>`;
            productsServices.appendChild(createList(data.productsServices.items));
            const painRelievers = document.createElement('div');
            painRelievers.className = 'bg-white p-4 rounded-lg shadow-md border';
            painRelievers.innerHTML = `<h3 class="text-lg font-bold mt-4 mb-2">${data.painRelievers.title}</h3>`;
            painRelievers.appendChild(createList(data.painRelievers.items));
            const gainCreators = document.createElement('div');
            gainCreators.className = 'bg-white p-4 rounded-lg shadow-md border';
            gainCreators.innerHTML = `<h3 class="text-lg font-bold mt-4 mb-2">${data.gainCreators.title}</h3>`;
            gainCreators.appendChild(createList(data.gainCreators.items));
            left.appendChild(productsServices);
            left.appendChild(painRelievers);
            left.appendChild(gainCreators);

            const right = document.createElement('div');
            right.className = 'space-y-4';
            const customerJobs = document.createElement('div');
            customerJobs.className = 'bg-white p-4 rounded-lg shadow-md border';
            customerJobs.innerHTML = `<h3 class="text-lg font-bold mb-2">${data.customerJobs.title}</h3>`;
            customerJobs.appendChild(createList(data.customerJobs.items));
            const pains = document.createElement('div');
            pains.className = 'bg-white p-4 rounded-lg shadow-md border';
            pains.innerHTML = `<h3 class="text-lg font-bold mt-4 mb-2">${data.pains.title}</h3>`;
            pains.appendChild(createList(data.pains.items));
            const gains = document.createElement('div');
            gains.className = 'bg-white p-4 rounded-lg shadow-md border';
            gains.innerHTML = `<h3 class="text-lg font-bold mt-4 mb-2">${data.gains.title}</h3>`;
            gains.appendChild(createList(data.gains.items));
            right.appendChild(customerJobs);
            right.appendChild(pains);
            right.appendChild(gains);

            grid.appendChild(left);
            grid.appendChild(right);

            box.appendChild(grid);
            return box;
        }

        function renderSwotAnalysis(data) {
            const box = createArtifactBox('📊 SWOT Analysis');
            const grid = document.createElement('div');
            grid.className = 'grid grid-cols-2 gap-4';

            for (const key in data) {
                const section = data[key];
                const sectionBox = document.createElement('div');
                sectionBox.className = 'bg-white p-4 rounded-lg shadow border';
                sectionBox.innerHTML = `<h3 class="text-lg font-bold mb-2">${section.title}</h3>`;
                sectionBox.appendChild(createList(section.items));
                grid.appendChild(sectionBox);
            }

            box.appendChild(grid);
            return box;
        }

        function renderPestelAnalysis(data) {
            const box = createArtifactBox('🌍 PESTEL Analysis');
            const grid = document.createElement('div');
            grid.className = 'grid grid-cols-3 gap-4';

            for (const key in data) {
                if (key === 'title') continue;
                const section = data[key];
                const sectionBox = document.createElement('div');
                sectionBox.className = 'bg-white p-4 rounded-lg shadow border';
                sectionBox.innerHTML = `<h3 class="text-lg font-bold mb-2">${section.title}</h3>`;
                sectionBox.appendChild(createList(section.items));
                grid.appendChild(sectionBox);
            }

            box.appendChild(grid);
            return box;
        }

        function renderPortersFiveForces(data) {
            const box = createArtifactBox("⚔️ Porter's Five Forces");
            const grid = document.createElement('div');
            grid.className = 'grid grid-cols-3 gap-4';

            for (const key in data) {
                if (key === 'title') continue;
                const force = data[key];
                const forceBox = document.createElement('div');
                forceBox.className = 'bg-white p-4 rounded-lg shadow border';
                forceBox.innerHTML = `<h3 class="text-lg font-bold mb-2">${force.title} <span class="text-sm font-normal ${force.level === 'Low' ? 'text-green-500' : force.level === 'Moderate' ? 'text-yellow-500' : 'text-red-500'}">(${force.level})</span></h3>`;
                forceBox.appendChild(createList(force.items));
                grid.appendChild(forceBox);
            }

            box.appendChild(grid);
            return box;
        }

        function renderAnsoffMatrix(data) {
            const box = createArtifactBox('📈 Ansoff Matrix');
            const grid = document.createElement('div');
            grid.className = 'grid grid-cols-2 gap-4';

            for (const key in data) {
                if (key === 'title') continue;
                const strategy = data[key];
                const strategyBox = document.createElement('div');
                strategyBox.className = 'bg-white p-4 rounded-lg shadow border';
                strategyBox.innerHTML = `<h3 class="font-bold mb-2">${strategy.title}</h3>`;
                strategyBox.appendChild(createList(strategy.items));
                grid.appendChild(strategyBox);
            }

            box.appendChild(grid);
            return box;
        }

        function renderRaciMatrix(data) {
            const box = createArtifactBox('🧑‍🤝‍🧑 RACI Matrix');
            const table = document.createElement('table');
            table.className = 'table-auto w-full';
            const thead = document.createElement('thead');
            thead.className = 'bg-gray-200';
            const headerRow = document.createElement('tr');
            for (const header of data.headers) {
                const th = document.createElement('th');
                th.className = 'px-4 py-2';
                th.textContent = header;
                headerRow.appendChild(th);
            }
            thead.appendChild(headerRow);
            table.appendChild(thead);

            const tbody = document.createElement('tbody');
            for (const row of data.rows) {
                const tr = document.createElement('tr');
                const taskCell = document.createElement('td');
                taskCell.className = 'border px-4 py-2';
                taskCell.textContent = row.task;
                tr.appendChild(taskCell);
                for (const value of row.values) {
                    const td = document.createElement('td');
                    td.className = 'border px-4 py-2 text-center';
                    td.textContent = value;
                    tr.appendChild(td);
                }
                tbody.appendChild(tr);
            }
            table.appendChild(tbody);

            box.appendChild(table);
            return box;
        }

        function renderUserStories(data) {
            const box = createArtifactBox('📖 User Stories');
            const container = document.createElement('div');
            container.className = 'space-y-4';

            for (const story of data.stories) {
                const storyBox = document.createElement('div');
                storyBox.className = 'bg-white p-4 rounded-lg shadow border';
                storyBox.innerHTML = `
                    <p><span class="font-bold">As a</span> ${story.as}</p>
                    <p><span class="font-bold">I want</span> ${story.iWant}</p>
                    <p><span class="font-bold">So that</span> ${story.soThat}</p>
                `;
                container.appendChild(storyBox);
            }

            box.appendChild(container);
            return box;
        }

        function renderProductRoadmap(data) {
            const box = createArtifactBox('🗺️ Product Roadmap');
            const container = document.createElement('div');
            container.className = 'space-y-4';

            for (const phase of data.phases) {
                const phaseBox = document.createElement('div');
                phaseBox.className = 'bg-white p-4 rounded-lg shadow border';
                phaseBox.innerHTML = `<h3 class="text-lg font-bold mb-2">${phase.name}</h3>`;
                phaseBox.appendChild(createList(phase.items));
                container.appendChild(phaseBox);
            }

            box.appendChild(container);
            return box;
        }

        function renderCompetitiveAnalysis(data) {
            const box = createArtifactBox('🆚 Competitive Analysis');
            const table = document.createElement('table');
            table.className = 'table-auto w-full';
            const thead = document.createElement('thead');
            thead.className = 'bg-gray-200';
            const headerRow = document.createElement('tr');
            for (const header of data.headers) {
                const th = document.createElement('th');
                th.className = 'px-4 py-2';
                th.textContent = header;
                headerRow.appendChild(th);
            }
            thead.appendChild(headerRow);
            table.appendChild(thead);

            const tbody = document.createElement('tbody');
            for (const row of data.rows) {
                const tr = document.createElement('tr');
                const featureCell = document.createElement('td');
                featureCell.className = 'border px-4 py-2';
                featureCell.textContent = row.feature;
                tr.appendChild(featureCell);
                for (const value of row.values) {
                    const td = document.createElement('td');
                    td.className = 'border px-4 py-2';
                    td.textContent = value;
                    tr.appendChild(td);
                }
                tbody.appendChild(tr);
            }
            table.appendChild(tbody);

            box.appendChild(table);
            return box;
        }

        function renderOkrFramework(data) {
            const box = createArtifactBox('🎯 OKR Framework');
            const container = document.createElement('div');
            container.className = 'space-y-4';

            const objectiveBox = document.createElement('div');
            objectiveBox.className = 'bg-white p-4 rounded-lg shadow border';
            objectiveBox.innerHTML = `<h3 class="text-lg font-bold mb-2">Objective</h3><p>${data.objective}</p>`;
            container.appendChild(objectiveBox);

            const keyResultsBox = document.createElement('div');
            keyResultsBox.className = 'bg-white p-4 rounded-lg shadow border';
            keyResultsBox.innerHTML = '<h3 class="text-lg font-bold mb-2">Key Results</h3>';
            keyResultsBox.appendChild(createList(data.keyResults));
            container.appendChild(keyResultsBox);

            box.appendChild(container);
            return box;
        }

        function renderGoldenCircle(data) {
            const box = createArtifactBox('🎯 Golden Circle');
            const container = document.createElement('div');
            container.className = 'space-y-4';

            const whyBox = document.createElement('div');
            whyBox.className = 'bg-white p-4 rounded-lg shadow border';
            whyBox.innerHTML = `<h3 class="text-lg font-bold mb-2">Why</h3><p>${data.why}</p>`;
            container.appendChild(whyBox);

            const howBox = document.createElement('div');
            howBox.className = 'bg-white p-4 rounded-lg shadow border';
            howBox.innerHTML = `<h3 class="text-lg font-bold mb-2">How</h3><p>${data.how}</p>`;
            container.appendChild(howBox);

            const whatBox = document.createElement('div');
            whatBox.className = 'bg-white p-4 rounded-lg shadow border';
            whatBox.innerHTML = `<h3 class="text-lg font-bold mb-2">What</h3><p>${data.what}</p>`;
            container.appendChild(whatBox);

            box.appendChild(container);
            return box;
        }

        function renderJobsToBeDone(data) {
            const box = createArtifactBox('🛠️ Jobs to be Done (JTBD)');
            box.appendChild(createList(data.jobs));
            return box;
        }
    </script>
</body>
</html>